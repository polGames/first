/*
google "css identifiers" to find a lot of ways to find elements in the html file. there's way more than you think like 50+ ways
.something{} - finds a class with this name
#something{} - finds an id with this name
* an html element can have both a class and an id. it can have multiple classes in fact, separated by spaces like this class="class1 class2 class3". but only 1 id! never use spaces only dashes or underscores

you can subtarget things like this
.some-class div img{} - this would find a class we made named sub-class, find a div contained in it, find an img element contained in the div, then css style the img element - instead of some-class it can be some-id, or even just put 'body' or any element

a:hover{}

* someone said i may have to stay away from position:fixed so that the UI does not overlap with the Kongregate website (or any website, just an example)
*/

/*@font-face{
    font-family: myFont;
    src: url(zeldabreathofthewild.otf);
}*/

*{
    padding:0;
    margin:0;
    border:0;
    box-sizing: border-box;
    font-weight: bold;
}

body{
    background: rgb(0,0,0); /* also there is rgba(0,0,0,1), alpha is from 0-1 */
    overflow: hidden; /* makes it so you cant scroll down the website, no scrollbar etc. although canvas has a 'bug' where it will cause a scrollbar to appear anyway, but we solve that by setting canvas to display: block instead of the default display: inline */
}

/* 'a' is 'links' and stands for anchor */
a{
    color: rgb(255, 100, 0);
    text-decoration: none;
    font-weight: bold;
}

canvas{
    width: 100%;
    height: 100%;
    padding:0;
    margin:0;
    border:0;
    display: block; /* setting the canvas to 'block' instead of the default 'inline' gets rid of the annoying scrollbar 'bug' where a scrollbar appears anyway when the canvas resizes itself despite having overflow: hidden */
}

.container{
    margin: 0 auto 0 auto;
    position: relative; /* this literally does nothing unless you also use the top:0 and right:0 etc attributes to move it RELATIVE to the position it already has. if you use position: absolute then its not relative to itself, it will be at absolute coordinates within the browser
    * position: fixed, will mean even if i scroll, the element will not go away, it will not move at all on the monitor, this is exactly what i want for my game UI, scrolling should not affect it
    */
    top:0vh;
    left:0vw;
}

#phaserParent{
    width: 100%;
    height: 100%;
}